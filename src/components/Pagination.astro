---
interface Props {
  length: number;
  prevUrl: string | undefined;
  nextUrl: string | undefined;
  firstUrl: string;
  currentPage: number;
}
const { length, prevUrl, nextUrl, firstUrl, currentPage } = Astro.props;
const paginationList = Array.from({ length }, (_, i) => i + 1);
---

<nav aria-label="Blog pages" class="pagination pagination-default">
  {
    prevUrl && (
      <a href={prevUrl} class="pagination__link">
        Previous
      </a>
    )
  }

  {
    paginationList.map((num) => (
      <a
        href={`${firstUrl}${num == 1 ? "" : "/" + num}`}
        class={`pagination__link ${
          currentPage == num ? "disabled active" : ""
        }`}
      >
        {num}
      </a>
    ))
  }

  {
    nextUrl && (
      <a href={nextUrl} class="pagination__link">
        Next <i class="pi-angle-right" />
      </a>
    )
  }
</nav>

<style lang="scss">
  .pagination {
    display: flex;
    justify-content: center;
    margin-block: 4rem;
    &__link {
      padding: 8px;
      margin: 0 4px;
      color: #fff;
      border: 1px solid #ccc;
      border-radius: 4px;
      transition: background-color 0.3s;

      &.disabled {
        pointer-events: none;
        opacity: 0.6;
      }

      &.active {
        background-color: #758eb1;
        color: #fff;
        border-color: #758eb1;
      }

      &:hover:not(.disabled) {
        background-color: #758eb1;
      }
    }
  }
</style>
