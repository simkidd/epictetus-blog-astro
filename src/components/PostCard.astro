---
import { Image } from "astro:assets";
import { formatDate } from "../utils/helpers.ts";
import { getEntry, type CollectionEntry } from "astro:content";

interface Props {
  post: CollectionEntry<"posts">;
}

const { post } = Astro.props;
const { title, date, category, author, image, description } = post.data;

const { data: authorData } = await getEntry("authors", author.id);
---

<article class="post-card">
  <div class="img-wrap">
    <Image src={image} alt={title} />
  </div>
  <div class="content">
    <p class="small-text">
      <span>{category}</span>
      &bull;
      <span>{formatDate(date)}</span>
    </p>
    <a href={`/blog/${post.slug}`}>
      <h2>
        {title}
      </h2>
    </a>
    <p>
      {description}
    </p>
    <div class="author">
      <div class="author-img">
        <Image src={authorData.image} alt={authorData.name} />
      </div>
      <p class="author-name">{authorData.name}</p>
    </div>
  </div>
</article>

<style lang="scss">
  .post-card {
    .img-wrap {
      width: 100%;
      height: 213px;
      border-radius: 10px;
      overflow: hidden;
      @media screen and (max-width: 768px) {
        width: 100%;
        height: 176px;
      }
      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
    .content {
      margin-top: 20px;
      .small-text {
        font-size: 14px;
        font-weight: 400;
        line-height: normal;
        opacity: 0.6;
      }
      h2 {
        font-size: 24px;
        font-weight: 400;
        line-height: 38px;
        color: #fff;
      }
      p {
        color: rgba(255, 255, 255, 0.6);
        font-size: 16px;
        font-weight: 400;
        line-height: 28px;
        margin-bottom: 20px;
      }
      .author {
        display: flex;
        align-items: center;
        gap: 16px;
        .author-img {
          width: 50px;
          height: 50px;
          border-radius: 50%;
          overflow: hidden;
          img {
            width: 100%;
            height: 100%;
            object-fit: cover;
          }
        }
        .author-name {
          margin: 0;
        }
      }
    }
  }
</style>
