---
import { getCollection, type CollectionEntry } from "astro:content";

// component imports
import PostCard from "../../components/PostCard.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import Pagination from "@components/Pagination.astro";

interface Page {
  data: CollectionEntry<"posts">[];
  url: {
    prev: string | undefined;
    next: string | undefined;
  };
  lastPage: number;
  currentPage: number;
}

const pathname = new URL(Astro.request.url).pathname;
const firstPath = pathname.split("/")[1]; // Remove empty parts

export async function getStaticPaths({ paginate }) {
  const blogPosts = await getCollection("posts", ({ data }) => {
    return data.draft !== true;
  });

  return paginate(blogPosts, {
    pageSize: 2,
  });
}

const { page } = Astro.props as {page: Page};
const posts = page.data;

console.log(page);
---

<MainLayout title="Posts">
  <section class="posts container">
    <h2>Blog Posts</h2>
    <div class="post-grid">
      {posts.map((post) => <PostCard post={post} />)}
    </div>

    <Pagination
      prevUrl={page.url.prev}
      nextUrl={page.url.next}
      length={page.lastPage}
      currentPage={page.currentPage}
      firstUrl={`/${firstPath}`}
    />
  </section>
</MainLayout>

<style lang="scss">
  .posts {
    h2 {
      font-size: 34px;
      font-weight: 400;
      line-height: 28px;
      text-align: center;
      margin-bottom: 100px;
    }
    .post-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 30px;
      @media screen and (max-width: 768px) {
        grid-template-columns: 1fr;
        gap: 20px;
      }
    }
  }
</style>
